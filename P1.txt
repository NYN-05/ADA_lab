#include <stdio.h>
#include <stdlib.h>
#define MAX 9
int cost[MAX][MAX], parent[MAX], n, ne=1, mincost;

int find(int i) {
	while (parent[i]) i = parent[i];
	return i;
}

int uni(int i, int j) {
	if (i != j) {
		parent[j] = i;
		return 1;
	}
	return 0;
}

int main() {
	printf("Vertices: ");
	scanf("%d", &n);
	printf("Cost matrix:\n");
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			scanf("%d", &cost[i][j]), cost[i][j] = cost[i][j] ?: 999;
    printf("The edges of Minimum Cost Spanning Tree are\n");
	while (ne < n) {
		int min = 999, a, b, u, v;
		for (int i = 1; i <= n; i++)
			for (int j = 1; j <= n; j++)
				if (cost[i][j] < min)
					min = cost[i][j], a = u = i, b = v = j;

		u = find(u);
		v = find(v);
		if (uni(u, v))
			printf("%d (%d,%d) %d\n", ne++, a, b, min), mincost += min;
		cost[a][b] = cost[b][a] = 999;
	}
	printf("Min cost: %d\n", mincost);
	return 0;
}